OPTION COMPRESS=YES;
PROC FORMAT;
  VALUE DSRG (DEFAULT=3)
        0  = ' '
        2  = 'PO'
       32  = 'DA'
       64  = 'PS'
       65  = 'PSU'
      128  = 'IS';

  VALUE RCFM (DEFAULT=3)
        0  = ' '
       80  = 'VB'
       82  = 'VBM'
      128  = 'F'
      130  = 'FM'
      144  = 'FB'
      192  = 'U';


DATA _NULL_;
   TITLE "DATASET INVENTORY SYSTEM -- CONTROL EDIT";
   FILE REPORTA ;
  IF _N_=1 THEN DO;
    INFILE STG2IN;
    INPUT @5 TYPE PIB1.@;
    IF TYPE ¬= 0 THEN DO;
      PUT 'FIRST RECORD IS NOT A VOLUME RECORD.  RUN WILL BE ABORTED.';
      ABORT RETURN 16;
      END;
  /*INPUT @7 VOLSER $6.;
    CALL SYMPUT('PACK',VOLSER);*/
    END;
  INFILE SITE;
 /* ------------------------------------------------------- */
 /* INPUT SYSID AND DATA DATE                               */
 /* DATA DATE WILL DEFAULT TO CURRENT DATE IF NOT SPECIFIED */
 /* ------------------------------------------------------- */
  INPUT SYSID $4. @7 DATE $10.;
  IF DATE = ' ' THEN
    DDATE = TODAY();
  ELSE DDATE = INPUT(DATE,DATE10.);
  CALL SYMPUT('SITE',SYSID);
  CALL SYMPUT('DAY',DDATE);
  PUT  SYSID= DDATE= ;
RUN;

DATA PREPROC1.ALLDATA;
  FILE REPORTA ;
  LENGTH MEMTYPE $ 6
         SYSID   $ 4;
  INFILE STG2IN;
  RETAIN SYSID
         DDATE
         DSN
         VOLSER;
  IF _N_=1 THEN DO;
      SYSID = SYMGET('SITE');
      TITLE "DATASET INVENTORY SYSTEM -- &SITE -- STAGE2 EDIT";
      END;
    DDATE  = &DAY         ;
  INPUT @5 TYPE PIB1. @; DROP TYPE;
  SELECT (TYPE);
    WHEN (0) DO;
      INPUT @7 VOLSER $6.;
      PUT 'NOW PROCESSING VOLUME ' VOLSER $6.;
      DELETE;
      END;
    WHEN (1) DO;
      INPUT @6 DSNTYPE PIB1.@; RETAIN DSNTYPE;
      IF DSNTYPE = 0 THEN DSTYPE = 'LOAD  ';
        ELSE IF DSNTYPE = 1 THEN DSTYPE = 'SOURCE';
          ELSE DSTYPE = 'OTHER';
      LINK DSN;
      END;
    WHEN (2) DO;
      IF DSNTYPE = 0 THEN LINK LMEM;
        ELSE LINK SMEM;
      END;
    WHEN (3) DELETE;
    OTHERWISE DO;
      PUT  'UNDEFINED TYPE ' TYPE=;
      DELETE;
      END;
    END;
  RETURN;

DSN:
  INPUT @7 DSN $CHAR44. @52 VOLSER $6. @89 DSRG PIB1. @91 RCFM PIB1.
        @93 BLKSIZE PIB2. @95 LRECL PIB2. @66 EXTENTS PIB1. @;
  IF SUBSTR(DSN,1,8) = 'CATINDEX' OR
     SUBSTR(DSN,1,2) = 'ZZ'       THEN DELETE;
  DSORG = PUT(DSRG,DSRG.); DROP DSRG;
  RECFM = PUT(RCFM,RCFM.); DROP RCFM;
  IF DSORG = ' ' THEN DO;
    INPUT @90 VSAM PIB1. @;
    IF VSAM = 8 THEN DSORG = 'VS';
    END;
  IF EXTENTS <= 3 THEN X = EXTENTS;
    ELSE X = 3;
  SPACE = 0;
  DO I=1 TO X;
    Q = (I-1) * 10;
    INPUT @(112+Q+2) CCL PIB2. HHL PIB2. CCH PIB2. HHH PIB2. @;
    SPACE = SPACE + ((CCH - CCL) * 15) + (HHH - HHL + 1);
    END;
  INPUT;
* PUT SPACE= X= I= Q= CCL= HHL= CCH= HHH= EXTENTS=;
  DROP X I Q CCL HHL CCH HHH;
  IF DSORG = 'VS' THEN DO;
    POSITION = INDEX(DSN,'DATA'); DROP POSITION;
    IF POSITION ¬= 0 THEN DO;
      INPUT @7 DSNI $CHAR44. @66 EXTENTSI PIB1. @@;
      IF SUBSTR(DSN,1,POSITION-1) EQ SUBSTR(DSNI,1,POSITION-1) AND
         SUBSTR(DSNI,POSITION) EQ 'INDEX' THEN DO;
        IF EXTENTSI <= 3 THEN X = EXTENTSI;
          ELSE X = 3;
        SPACEI = 0;
        DO I=1 TO X;
          Q = (I-1) * 10;
          INPUT @(112+Q+2) CCL PIB2. HHL PIB2. CCH PIB2. HHH PIB2. @;
          SPACEI = SPACEI + ((CCH - CCL) * 15) + (HHH - HHL + 1);
          END;
        INPUT;
        SPACE = SPACE + SPACEI;
        END;
      END;
    END;

RETURN;

LMEM:
    /* PROCESS MEMBER RECORD */
  INPUT @7 MEMBER $8. @18 LENGTH PIB1. @; DROP LENGTH;
  IF LENGTH ¬= 0 THEN DO;
*   PUT LENGTH=;
    LENGTH = (MOD(LENGTH,32) * 2) - 7;
    INPUT @26 DE $VARYING34. LENGTH;
    SUBSTR(DE,2,1)  = '00'X;
    SUBSTR(DE,7,2)  = '0000'X;
    SUBSTR(DE,14,1) = '00'X;
    END;
  ELSE DO;
    INPUT;
    MEMTYPE='LOAD';
    RETURN;
    END;
  MEMTYPE='LOAD';
    /* PROCESS IDR RECORDS - FIND LKED DATE */
  DO UNTIL(IDRTYPE = 2);
    INPUT @5 IDR PIB1. @@; DROP IDR;
  /*PUT IDR= MEMBER= ;*/
    IF IDR ¬= 3 THEN DO; /* NOT AN IDR RECORD */
      PUT 'TYPE 2 IDR RECORD NOT FOUND ' DSN= MEMBER=;
      RETURN;
      END;
    INPUT @7 IDRTYPE PIB1. @; DROP IDRTYPE;
  /*PUT IDRTYPE= MEMBER=;*/
    IF IDRTYPE = 2 THEN DO;
      INPUT @20 LDATE PD3.; DROP LDATE;
      DATE = INPUT(PUT(LDATE,5.),JULIAN5.);
      END;
    ELSE INPUT;
  END;
RETURN;

SMEM:
  MEMTYPE='SOURCE';
  INPUT @7 MEMBER $8. @18 LENGTH PIB1. @;
  LENGTH = MOD(LENGTH,32) * 2;
  IF LENGTH = 30 THEN DO;
    INPUT @23 DATE1 PIB1. @27 DATE2 PIB1. @; DROP DATE1 DATE2;
    IF DATE1 = 0 AND DATE2 = 0 THEN
      INPUT @27 CDATE PD4. @39 UID $8. @19 DE $CHAR30. @; DROP CDATE;
      DATE = INPUT(PUT(CDATE,7.),JULIAN7.);
    END;
  INPUT @(18 + LENGTH + 6) HASH $CHAR8.;
RETURN;

PROC PRINTTO PRINT=DATACONT;
PROC CONTENTS DATA=PREPROC1.ALLDATA;
PROC PRINTTO;
