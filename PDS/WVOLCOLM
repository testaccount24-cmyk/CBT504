//WSBGWVOL JOB  ,GOLOB,MSGCLASS=X,NOTIFY=WSBG
//S4       EXEC  ASMACL MAC='STDL.MVS.AMODGEN'
//ASM.SYSIN  DD  *
         TITLE 'WVOLCOLM - E15 EXIT TO PASS DATA SET RECORDS'
***********************************************************************
*                                                                     *
*                                                                     *
*    WRITTEN BY JOHN R. GROUT                                         *
*                                                                     *
*    MODULE:   WVOLCOLM                                               *
*                                                                     *
*    FUNCTION: WVOLCOLM IS CALLED TO CREATE EACH RECORD FOR THE       *
*              DATA SET RECORD ALPHABETIC SORT: IT COPIES CONTROL     *
*              RECORDS, NUMBERS DATA SET RECORDS AND FLAGS DATA SET   *
*              RECORDS AS EXCLUDED (ADDS X'80' TO THE TYPE FIELD) IF  *
*              THE DATA SET IS NOT PRESENT AT EITHER OF THE OTHER TWO *
*              SITES.                                                 *
*                                                                     *
*    INPUT:    STG1DS0 - MAIN INPUT RECORDS (FOR THIS SITE)           *
*              STG1DS1 - DATA SET NAMES FOR OTHER SITE #1             *
*              STG1DS2 - DATA SET NAMES FOR OTHER SITE #2             *
*                                                                     *
*    OUTPUT:   RETURN CODE IN REG 15                                  *
*                 8 - DO NOT RETURN (WHEN NO MORE RECORDS)            *
*                12 - INSERT RECORD (POINTED TO BY R1)                *
*                16 - ERROR (WHEN DATA SETS ARE BROKEN OR MISSING)    *
*                                                                     *
*    REGISTERS:                                                       *
*                 R12 - BASE REGISTER                                 *
*                                                                     *
*    EXTERNAL REFERENCES:                                             *
*                                                                     *
*    MACROS USED:                                                     *
*                                                                     *
*    NONE                                                             *
*                                                                     *
* PROGRAM LOGIC:                                                      *
*                                                                     *
* SEE ABOVE.                                                          *
*                                                                     *
* INPUT:                                                              *
*                                                                     *
* SEE ABOVE.                                                          *
*                                                                     *
* OUTPUT:                                                             *
*                                                                     *
* SEE ABOVE.                                                          *
***********************************************************************
          EJECT
***********************************************************************
*                                                                     *
* DATA SET RECORDS                                                    *
* **** *** *******                                                    *
*                                                                     *
* A RECORD IS DESCRIBED BY DSECT CDSREC                               *
*                                                                     *
*   CDSREC                                                            *
*                                                                     *
*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 150 BYTES)        *
*                                                                     *
*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *
*                                                                     *
*   BYTES 4-5        DATA SET NUMBER (SET TO ZERO)                    *
*                                                                     *
*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *
*                                                                     *
*   BYTE  8          RECORD TYPE:                                     *
*                                                                     *
*                      X'01' - DATA SET RECORD                        *
*                                                                     *
*   BYTE  9          SECTION TYPE:                                    *
*                                                                     *
*                      X'00' - SELECTABLE LOAD PDS                    *
*                      X'01' - SELECTABLE SOURCE PDS                  *
*                      X'02' - OTHER NON-VSAM DATA SET                *
*                                                                     *
*   BYTES 10-149     FORMAT-1 DSCB (140 BYTES)                        *
***********************************************************************
         TITLE 'WVOLCOLM - MAPPING DSECTS'
*
* COMPARISON DATASET FORMATS
*
* DATASET RECORD
CDSREC   DSECT
CDSLEN   DS    H                     LENGTH OF RECORD
CDSRESV  DS    H                     RESERVED (MUST BE ZERO)
CDSDSNM  DS    H                     DATA SET NUMBER
CDSMBNM  DS    H                     MEMBER NUMBER
CDSTYPE  DS    XL1                   RECORD TYPE
TYPEDSR  EQU   X'01'                 DATA SET RECORD
CDSSTYPE DS    XL1                   SECTION TYPE
STYPLOAD EQU   X'00'                 LOAD PDS (SELECTABLE)
STYPSRCE EQU   X'01'                 SOURCE PDS (SELECTABLE)
STYPNSLC EQU   X'02'                 NON-SELECTABLE
STYPEXCL EQU   X'80'                 AUTOMATIC EXCLUDE FLAG
CDSFMT1D DS    CL140                 FORMAT-1 DSCB
         ORG   CDSFMT1D
CDSDSN   DS    CL44                  DATA SET NAME
         DCBD  DEVD=DA
         SPACE  ,
R0       EQU    0
R1       EQU    1
R2       EQU    2
R3       EQU    3
R4       EQU    4
R5       EQU    5
R6       EQU    6
R7       EQU    7
R8       EQU    8
R9       EQU    9
R10      EQU    10
R11      EQU    11
R12      EQU    12
R13      EQU    13
R14      EQU    14
R15      EQU    15
         TITLE  'WVOLCOLM -- MAIN PROGRAM'
WVOLCOLM CSECT
         SAVE  (14,12)
         SPACE ,
         LR   R12,R15
         USING WVOLCOLM,R12
         ST    R13,SAVEAREA+4
         LA    R1,SAVEAREA
         ST    R1,8(,R13)
         LR    R13,R1
         SPACE ,
         TM    MODE,INIT            HAVE WE GONE THROUGH INITIALIZATION
         BO    GETS00               YES, SKIP INITIALIZATION
         LA    R1,OPENDCB           POINT TO DCB LIST
         OPEN  MF=(E,(1))           OPEN DCBS FOR PROCESSING
         USING IHADCB,R3
         LA    R3,STG1DS0           POINT TO STG1DS0 DCB
         TM    DCBOFLGS,X'10'       DID DATA SET OPEN?
         BZ    BADDCB               NO - GO EXIT
         LA    R3,STG1DS1           POINT TO STG1DS1 DCB
         TM    DCBOFLGS,X'10'       DID DATA SET OPEN?
         BZ    BADDCB               NO - GO EXIT
         LA    R3,STG1DS2           POINT TO STG1DS2 DCB
         TM    DCBOFLGS,X'10'       DID DATA SET OPEN?
         BZ    BADDCB               NO - GO EXIT
         OI    MODE,INIT            WE HAVE GONE THROUGH INIT PROCESS
GETS00   GET   STG1DS0              GET A RECORD FROM STG1DS0
         LR    R9,R1                RECORD IS POINTED TO BY R9
         USING CDSREC,R9
         CLI   CDSTYPE,TYPEDSR      IS THIS A CONTROL RECORD?
         BNE   DOREC                YES, GO RETURN CONTROL RECORD
         LH    R1,DSNCTR            INCREMENT DATA SET COUNTER
         AH    R1,=H'1'
         STH   R1,DSNCTR
         MVC   CDSDSNM(2),DSNCTR    MOVE DATA SET COUNTER INTO RECORD
         CLI   CDSSTYPE,STYPNSLC    IS THIS A NON-SELECTABLE RECORD?
         BE    DOREC                YES, GO RETURN DATA SET RECORD
         TM    MODE,DS01RD          IS THERE A CURRENT STG1DS1 REC?
         BO    COMPS01              YES, GO CHECK STG1DS1
GETS01   GET   STG1DS1              GET A RECORD FROM STG1DS1
         ST    R1,STG1DS1A          STORE ADDRESS FOR LATER USE
GETS01A  OI    MODE,DS01RD          MARK CURRENT STG1DS1 RECORD
COMPS01  L     R10,STG1DS1A         LOAD ADDRESS OF RECORD
         CLC   CDSDSN,4(R10)        COMPARE MAIN AND STG1DS1
         BH    GETS01               MAIN HIGH - GET ANOTHER RECORD
         BL    CHECKS02             MAIN LOW - GO CHECK STG1DS2
         NI    MODE,X'FF'-DS01RD    MAIN EQUAL - RECORD HAS BEEN USED
         B     DOREC                GO RETURN DATA SET RECORD
CHECKS02 TM    MODE,DS02RD          IS THERE A CURRENT STG1DS2 REC?
         BO    COMPS02              YES, GO CHECK STG1DS2
GETS02   GET   STG1DS2              GET A RECORD FROM STG1DS2
         ST    R1,STG1DS2A          STORE ADDRESS FOR LATER USE
GETS02A  OI    MODE,DS02RD          MARK CURRENT STG1DS2 RECORD
COMPS02  L     R11,STG1DS2A         LOAD ADDRESS OF RECORD
         CLC   CDSDSN,4(R11)        COMPARE MAIN AND STG1DS2
         BH    GETS02               MAIN HIGH - GET ANOTHER RECORD
         BL    SUPPREC              MAIN LOW - GO SUPPRESS RECORD
         NI    MODE,X'FF'-DS02RD    MAIN EQUAL - RECORD HAS BEEN USED
         B     DOREC                GO RETURN DATA SET RECORD
SUPPREC  OI    CDSSTYPE,STYPEXCL    GO FLAG RECORD AS AUTO EXCLUDED
DOREC    LR    R1,R9                POINT TO INSERTED RECORD
         LA    R15,12               INSERT RECORD
         L     R13,4(,R13)          POINT TO CALLERS SAVE AREA
         L     R14,12(,R13)         LOAD REGISTER 14
         L     R0,20(,R13)          LOAD REGISTER 0
         RETURN (2,12),RC=(15)      RETURN REST OF REGS AND EXIT
STG1DS0E LA    R1,OPENDCB           POINT TO DCB LIST
         CLOSE MF=(E,(1))           CLOSE DATA SETS
         LA    R15,8                DO NOT RETURN TO EXIT
COLMEXIT L     R13,4(,R13)          POINT TO CALLERS SAVE AREA
         RETURN (14,12),RC=(15)     RETURN TO CALLER
BADDCB   LA    R15,16               SIGNAL ERROR IN SORT
         B     COLMEXIT
STG1DS1E MVC   STG1DS1A,=AL4(DMYDSREC) POINT TO DUMMY RECORD
         B     GETS01A              RETURN TO MAINLINE
STG1DS2E MVC   STG1DS2A,=AL4(DMYDSREC) POINT TO DUMMY RECORD
         B     GETS02A              RETURN TO MAINLINE
SAVEAREA DS    18F
STG1DS0  DCB   DDNAME=STG1DS0,                                         X
               DSORG=PS,                                               X
               LRECL=264,                                              X
               EODAD=STG1DS0E,                                         X
               RECFM=VB,                                               X
               MACRF=(GL)
STG1DS1  DCB   DDNAME=STG1DS1,                                         X
               DSORG=PS,                                               X
               LRECL=264,                                              X
               EODAD=STG1DS1E,                                         X
               RECFM=VB,                                               X
               MACRF=(GL)
STG1DS2 DCB    DDNAME=STG1DS2,                                         X
               DSORG=PS,                                               X
               LRECL=264,                                              X
               EODAD=STG1DS2E,                                         X
               RECFM=VB,                                               X
               MACRF=(GL)
OPENDCB  OPEN  (STG1DS0,(INPUT),STG1DS1,(INPUT),STG1DS2,(INPUT)),MF=L
STG1DS1A DS    A
STG1DS2A DS    A
DMYDSREC DS    0F
         DC    H'48'
         DC    H'0'
         DC    44XL1'FF'
DSNCTR   DC    H'-1'
MODE     DC    X'00'
INIT     EQU   X'80'                INITIALIZATION PERFORMED
DS01RD   EQU   X'40'                RECORD FOR STG1DS1 READ
DS02RD   EQU   X'20'                RECORD FOR STG1DS2 READ
         END
//LKED.SYSLMOD  DD  DISP=SHR,DSN=WSBG.WVOL.LOADLIB(WVOLCOLM)
