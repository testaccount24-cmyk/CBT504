//WSBGWVOL JOB  ,GROUT,MSGCLASS=X,NOTIFY=WSBG
//S1       EXEC  ASMACL MAC='STDL.MVS.AMODGEN'
//ASM.SYSIN  DD  *
         TITLE 'WVOLCOLL - COLLECT VTOC DSCBS'
***********************************************************************
*                                                                     *
*                                                                     *
*    WRITTEN BY JOHN R. GROUT (EARLIER VERSION BY CHRIS MARTEN)       *
*                                                                     *
*    MODULE:   WVOLCOLL                                               *
*                                                                     *
*    FUNCTION: WVOLCOLL READS IN FORMAT-1 DSCBS FROM A DESIGNATED     *
*              VTOC AND WRITES OUT A CONTROL RECORD AND DATA SET      *
*              RECORDS DESCRIBING THEM.                               *
*              ALSO, A MESSAGE FILE IS WRITTEN TO SYSPRINT.           *
*                                                                     *
*    INPUT:    SYSIN  - INCL STATEMENTS OR                            *
*                       EXCL STATEMENTS (UP TO 512)                   *
*              TGTVOL - POINTER TO VOLUME TO PROCESS                  *
*                                                                     *
*    OUTPUT:   RETURN CODE IN REG 15                                  *
*                 0 - AT LEAST ONE DATA SET WAS SELECTED              *
*                 4 - NO DATA SETS WERE SELECTED                      *
*                 8 - ERROR IN INPUT STATMEMENTS                      *
*                16 - COULD NOT OPEN ALL DCBS FOR PROCESSING          *
*                                                                     *
*              OUTDSR  - DATA SET RECORDS                             *
*              SYSPRINT - MESSAGE FILE                                *
*                                                                     *
*    REGISTERS:                                                       *
*                 R12 - BASE REGISTER                                 *
*                                                                     *
*    EXTERNAL REFERENCES:                                             *
*                                                                     *
*    MACROS USED:                                                     *
*                                                                     *
*    READJFCB, CVAFSEQ, OPEN, CLOSE, PUT, GET, AND READ               *
*                                                                     *
* PROGRAM LOGIC:                                                      *
*                                                                     *
* THE PROGRAM USES 'RDJFCB' AND 'OPEN TYPE=J' TO ACCESS THE VTOC      *
* (FORMAT-4 DSCB), THEN FALLS INTO A 'CVAFSEQ' READ-LOOP TO GATHER    *
* THE FORMAT-1 DSCBS. THE DSCBS ARE READ IN PHYSICAL-SEQUENTIAL ORDER *
* AND DATA SET RECORDS DESCRIBING THEM ARE WRITTEN OUT.               *
*                                                                     *
* INPUT:                                                              *
*                                                                     *
* THE CONTROL STATEMENTS PROVIDED IN SYSIN ARE 'INCL' AND 'EXCL':     *
* UP TO 512 'INCL' STATEMENTS MAY BE PROCESSED OR UP TO 512 'EXCL'    *
* STATEMENTS (BUT NOT BOTH IN THE SAME RUN).  IF SYSIN IS NULL,       *
* ALL ELIGIBLE PDSES FROM THE TARGET VOLUME ARE SELECTED.             *
*                                                                     *
* THE FORMAT FOR THE CONTROL STATEMENTS IS:                           *
*                                                                     *
* COLUMN                                                              *
* 1         6                             50                          *
*                                                                     *
* INCL      FULLY QUALIFIED DATASET NAME  COMMENTS                    *
*                                                                     *
* (OR)           (OR)                                                 *
*                                                                     *
* EXCL      FULLY QUALIFIED DATASET NAME  COMMENTS                    *
*                                                                     *
* FOR EXAMPLE:                                                        *
*                                                                     *
* INCL SPP#.LINKLIB                                 COMMENT           *
*                                                                     *
* EXCL W$.LPALIB                                    COMMENT           *
*                                                                     *
* OUTPUT:                                                             *
*                                                                     *
* THE PROGRAM CREATES TWO OUTPUT FILES: ONE FILE CONTAINING DATA      *
* SET RECORDS (SEE FORMAT BELOW) AND ONE OUTPUT MESSAGE FILE.         *
***********************************************************************
          EJECT
***********************************************************************
*                                                                     *
* CONTROL RECORD                                                      *
* ******* ******                                                      *
*                                                                     *
* A RECORD IS DESCRIBED BY DSECT CTLREC                               *
*                                                                     *
*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 16 BYTES)         *
*                                                                     *
*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *
*                                                                     *
*   BYTES 4-5        DATA SET NUMBER (SET TO ZERO)                    *
*                                                                     *
*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *
*                                                                     *
*   BYTE  8          RECORD TYPE:                                     *
*                                                                     *
*                      X'00' - CONTROL RECORD                         *
*                                                                     *
*   BYTE  9          SECTION TYPE                                     *
*                                                                     *
*                      X'00' - BASE                                   *
*                                                                     *
*   BYTES 10-15      VOLUME SERIAL                                    *
*                                                                     *
*   BYTES 16-149     RESERVED (SET TO ZERO)                           *
*                                                                     *
* DATA SET RECORD                                                     *
* **** *** ******                                                     *
*                                                                     *
* A RECORD IS DESCRIBED BY DSECTS CDSREC AND CDSRECVR                 *
*                                                                     *
*   CDSREC (BASE SECTION)                                             *
*                                                                     *
*   BYTES 0-1        RECORD DESCRIPTOR WORD (SET TO 150 BYTES)        *
*                                                                     *
*   BYTES 2-3        RESERVED (MUST BE ZERO)                          *
*                                                                     *
*   BYTES 4-5        DATA SET NUMBER (SET TO ZERO)                    *
*                                                                     *
*   BYTES 6-7        MEMBER NUMBER (SET TO ZERO)                      *
*                                                                     *
*   BYTE  8          RECORD TYPE:                                     *
*                                                                     *
*                      X'01' - DATA SET RECORD                        *
*                                                                     *
*   BYTE  9          BASE FOR CDSRECVR                                *
*                                                                     *
*   CDSRECVR (VARIABLE SECTION)                                       *
*                                                                     *
*   BYTE  0          SECTION TYPE:                                    *
*                                                                     *
*                      X'00' - SELECTABLE LOAD PDS                    *
*                      X'01' - SELECTABLE SOURCE PDS                  *
*                      X'02' - OTHER NON-VSAM DATA SET                *
*                                                                     *
*   BYTES 1-140      FORMAT-1 DSCB (140 BYTES)                        *
*                                                                     *
* MESSAGES                                                            *
* ********                                                            *
*                                                                     *
* MSG1  *** WARNING - MORE THAN 512 CONTROL STMTS                     *
*                                                                     *
* MSG2  *** WARNING - NO DATASET NAME ON CONTROL STMT                 *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         TITLE  'WVOLCOLL -- MAPPING DSECTS'
***********************************
*                                 *
*      MAPPING DSECTS             *
*                                 *
***********************************
         SPACE  ,
STMTFMT  DSECT                       INPUT STATEMENT FORMAT
CLUDE    DS     4C                   EXCL/INCL
         DS     C                    BLANK
DSNAME   DS     44C                  DATASET NAME
COMMENTS DS     31C                  UNUSED BY PROGRAM
         SPACE ,
*
* COMPARISON DATASET FORMATS
*
* CONTROL RECORD
CTLREC   DSECT
CTLLEN   DS    H                     LENGTH OF RECORD
CTLRESV  DS    CL8                   RESERVED (MUST BE ZERO)
         ORG   CTLRESV+2
CTLDSNM  DS    H                     DATA SET NUMBER
CTLMBNM  DS    H                     MEMBER NUMBER
CTLTYPE  DS    XL1                   RECORD TYPE
TYPECTL  EQU   X'00'                 CONTROL RECORD
CTLSTYP  DS    XL1                   SECTION TYPE
CTLVOLSR DS    CL6                   VOLUME SERIAL
CTLRESV1 DS    CL134                 RESERVED (MUST BE ZERO)
* DATA SET RECORD
CDSREC   DSECT
CDSLEN   DS    H                     LENGTH OF RECORD
CDSRESV  DS    H                     RESERVED (MUST BE ZERO)
CDSDSNM  DS    H                     DATA SET NUMBER
CDSMBNM  DS    H                     MEMBER NUMBER
CDSTYPE  DS    XL1                   RECORD TYPE
TYPEDSR  EQU   X'01'                 DATA SET RECORD
CDSVAR   DS    0C                    BEGINNING OF VARIABLE LENGTH SECT
CDSRECVR DSECT
CDSSTYPE DS    XL1                   SECTION TYPE
STYPLOAD EQU   X'00'                 LOAD PDS (SELECTABLE)
STYPSRCE EQU   X'01'                 SOURCE PDS (SELECTABLE)
STYPNSLC EQU   X'02'                 NON-SELECTABLE
CDSFMT1D DS    CL140                 FORMAT-1 DSCB
         ORG   CDSFMT1D
CDSDSN   DS    CL44                  DATA SET NAME
CDSFMTID DS    CL1                   FORMAT IDENTIFIER
CDSVOLSR DS    CL6                   VOLUME SERIAL
         SPACE ,
         PRINT OFF
         DCBD  DSORG=(PS)
WVOLDSCB DSECT
         IECSDSL1 (1)
DSCBLTH  EQU   *-WVOLDSCB
         PRINT  ON
         SPACE  ,
R0       EQU    0
R1       EQU    1
R2       EQU    2
R3       EQU    3
R4       EQU    4
R5       EQU    5
R6       EQU    6
R7       EQU    7
R8       EQU    8
R9       EQU    9
R10      EQU    10
R11      EQU    11
R12      EQU    12
R13      EQU    13
R14      EQU    14
R15      EQU    15
         TITLE  'WVOLCOLL -- INITIALIZATION'
***********************************
*                                 *
*        INITIALIZATION           *
*                                 *
***********************************
WVOLCOLL CSECT
         SAVE  (14,12)
         LR    R12,R15
         USING WVOLCOLL,R12
         ST    R13,SAVEAREA+4
         LA    R1,SAVEAREA
         ST    R1,8(,R13)
         LR    R13,R1
         LA    R1,DCBLST             LOAD DCB LIST PTR
         OPEN  MF=(E,(1))            OPEN ALL FILES
         USING IHADCB,R3             CHECK DCBS
         LA    R3,SYSINDCB
         TM    DCBOFLGS,X'10'
         BZ    BADDCB
         LA    R3,SYSPTDCB
         TM    DCBOFLGS,X'10'
         BZ    BADDCB
         LA    R3,ODSRDCB
         TM    DCBOFLGS,X'10'
         BZ    BADDCB
         TITLE  'WVOLCOLL -- READ AND SORT SYSIN'
***********************************
*                                 *
*   READ CONTROL CARDS            *
*                                 *
***********************************
*                                 *
* REMEMBER THAT THERE'S A LIMIT   *
* OF 512 STATEMENTS FOR INCL/EXCL.*
*                                 *
***********************************
         SPACE ,
         GETMAIN RU,LV=512*80
         ST    R1,CTLAREA           STORE STORAGE FOR CARD AREA
         LR    R9,R1
*
* R9 INDEXES THE STATEMENT TABLE
*
         SLR   R10,R10               CLEAR THE STMT CTR
         SPACE ,
GETLOOP  DS    0H
         GET   SYSINDCB             GET AN INPUT 'CARD' (LOCATE MODE)
         LR    R2,R1                POINT TO CARD
         USING STMTFMT,R2
         SPACE 2
         CLI   DSNAME,C' '          IF THE DSNAME FIELD
         BE    NODSN                   ERROR
         CLC   CLUDE(4),=C'INCL'    IF IT'S AN INCL,
         BNE   EXCLTST                 AND WE'RE NOT
         TM    FLAGS,EXCLMODE            IN EXCLUDE
         BO    GETLOOP                     MODE,
         OI    FLAGS,INCLMODE        SET 'INCL' MODE,
         B     SLOTIT                  AND GO SLOT IT.
         SPACE 2
EXCLTST  DS    0H
         CLC   CLUDE(4),=C'EXCL'    ON THE OTHER HAND,
         BNE   GETLOOP                 IF IT'S AN EXCL,
         TM    FLAGS,INCLMODE            AND WE'RE IN
         BO    GETLOOP                     INCL MODE, FORGET IT.
         OI    FLAGS,EXCLMODE        OTHERWISE, SET EXCL MODE.
         SPACE 2
SLOTIT   DS    0H
         LA    R10,1(R10)            IF MORE THAN 512
         CH    R10,=H'513'             INPUT STMTS,
         BE    TOOMANY                   EXIT 'N WARN ...
         SPACE ,
         MVC   0(80,R9),0(R2)        MOVE IT INTO A SLOT
         LA    R9,80(,R9)              AND STEP TO NEXT ...
         B     GETLOOP
         DROP  R2
         SPACE 2
TOOMANY  DS    0H
         OI    FLAGS,MESSY1          FLAG 'TOO MANY CNTL STMTS'
         LA    R10,512               WE HAVE ONLY 512 CNTL STATEMENTS
         B     INPEODAD
NODSN    DS    0H
         OI    FLAGS,MESSY2          FLAG 'NO DSN ON CNTL STMT'
         B     GETLOOP
         TITLE  'WVOLCOLL -- RDJFCB'
***********************************
*                                 *
*   READ JFCB FOR TARGET VTOC     *
*                                 *
***********************************
INPEODAD DS    0H
         BCTR  R10,0                DECREMENT NUMBER OF CARDS
         ST    R10,CTLCOUNT         STORE CONTROL COUNT
GETJFCB  RDJFCB MF=(E,JFCBLIST)
         SPACE 2
         MVC   JFCBAREA(44),=44X'04'
         LTR   R15,R15               IF WE GOT THE JFCB,
         BZ    WRTCTL                  GO WRITE CONTROL RECORD
DEBUG2   DC    H'0'                  OTHERWISE, CROAK
         SPACE 2
WRTCTL   DS    0H
         PUT   ODSRDCB
         USING CTLREC,R1
         MVC   CTLLEN,=H'150'        SET LENGTH
         MVC   CTLRESV(8),ZEROS      MOVE IN RESERVED AREA
         MVC   CTLVOLSR(6),JFCBAREA+118 MOVE IN VOLUME SERIAL
         MVC   VOLUME,CTLVOLSR       SAVE FOR FILLING IN DATA SET RECS
         MVI   CTLRESV1,X'00'        SET RESERVED AREA TO ZERO
         MVC   CTLRESV1+1(133),CTLRESV1
         DROP  R1
OPENVTOC DS    0H
         LA    R3,VTOCDCB
         OPEN  TYPE=J,MF=(E,JFCBLIST)
         SPACE ,
         TM    DCBOFLGS,X'10'
         BZ    BADDCB
         L     R2,DCBDEBAD           GET DEB ADDR FOR CVAF
         DROP  R3
         TITLE  'WVOLCOLL -- CVAFSEQ LOOP'
***********************************
*                                 *
*   READ ALL FMT-1 DSCBS          *
*                                 *
***********************************
         SPACE ,
         XC    BUFLIST(BFLHLN+BFLELN),BUFLIST    ZERO THE CALLING LIST
         OI    BFLHFL,BFLHDSCB                   READ DSCBS (NOT INDEX)
         MVI   BFLHNOE,1             JUST ONE BUFFER LIST ENTRY
         MVI   BFLELTH,DSCBLTH       GET THE WHOLE DSCB
         MVC   BFLEARG,ZEROS         SET CCHHR OF FIRST DSCB TO ZERO
         LA    R5,WVOLDSBA
         USING WVOLDSCB,R5
         ST    R5,BFLEBUF            SAVE IT IN THE PARM LIST
         SPACE ,
         SPACE ,
READDSCB DS    0H
         TM    FLAGS,WVOLCVAF        IS THIS FIRST READ?
         BO    SKIPFRST              NO, SKIP TO LATER READ
         OI    FLAGS,WVOLCVAF        THIS IS FIRST TIME READ
         SPACE ,
         LA    R1,CVPL
         CVAFSEQ DEB=(R2),                                             C
               ACCESS=GTEQ,          *******************************   C
               BUFLIST=BUFLIST,      *  GET THE FIRST DSCB (FMT-4) *   C
               MF=(E,(1))            *******************************
         SPACE 2
SKIPFRST DS    0H
         SPACE ,
         LA    R1,CVPL
         CVAFSEQ DEB=(R2),                                             C
               ACCESS=GT,            ***************                   C
               BUFLIST=BUFLIST,      *  GET A DSCB *                   C
               MF=(E,(1))            ***************
         SPACE ,
         LTR   R15,R15               OUT OF DSCBS?
         BNZ   ENDOFRDS              YES, OR AN ERROR
         SPACE ,
         CLI   DS1FMTID,C'1'         FMT-1?
         BNE   SKIPFRST              READ TILL WE DO ...
         SPACE ,
         TM    DS1DSORG,DS1DSGPS+DS1DSGDA+DS1DSGIS NON-VSAM DS?
         BNZ   FNONSELC
         TM    DS1DSORG+1,DS1ORGAM  VSAM?
         BNZ   FNONSELC
         TM    DS1DSORG,DS1DSGPO    PDS?
         BZ    FNONSELC
         OI    FLAGS,PDSFND
CHKLRECL DS    0H
         TM    DS1RECFM,DS1RECFU     UNDEFINED FORMAT?
         BNO   CSRCEF                NO, CHECK SOURCE FORMAT
         CLC   DS1DSNAM(3),=CL3'ZZ.' IS THIS A FILLER FILE?
         BE    FNONSELC              YES, NON-SELECTABLE
         NI    FLAGS,X'FF'-SPDSFND   TURN OFF SOURCE PDS FOUND
         B     CTLHEDR               CHECK FOR INCLUDE/EXCLUDE
CSRCEF   DS    0H
         TM    DS1RECFM,DS1RECFF     IS THIS FIXED FORMAT?
         BZ    FNONSELC              NO, NON-SELECTABLE
         CLC   DS1LRECL,=H'80'       IS LRECL = 80?
         BNE   FNONSELC              NO, FILE NON SELECTABLE
         NI    FLAGS,X'FF'-LPDSFND   TURN OFF LOAD PDS FOUND
         CLC   DS1DSNAM(9),=CL9'SYS1.UADS'
         BE    FNONSELC
CTLHEDR  TM    FLAGS,INCLMODE+EXCLMODE   IF NO CONTROLS,
         BZ    PUTDSREC                    CHECK PDS FLAGS
         L     R14,CTLAREA
         L     R15,CTLCOUNT
CTLLOOP  DS    0H
         CLC   5(44,R14),DS1DSNAM
         BNE   CTLLOOP1
         TM    FLAGS,INCLMODE        IF WE'RE IN
         BO    PUTDSREC                INCLUDE MODE, ACCEPT RECORD
         B     FNONSELC
CTLLOOP1 LA    R14,80(,R14)
         BCT   R15,CTLLOOP
         TM    FLAGS,EXCLMODE        IF NO MATCH AND
         BO    PUTDSREC                EXCLUDE MODE, ACCEPT RECORDL
FNONSELC DS    0H
         OI    FLAGS,NONSELC
PUTDSREC DS    0H
         PUT   ODSRDCB
         USING CDSREC,R1
         MVC   CDSLEN,=H'150'        SET RECORD LENGTH
         MVC   CDSRESV(2),ZEROS
         MVC   CDSDSNM(2),ZEROS
         MVC   CDSMBNM(2),ZEROS
         MVI   CDSTYPE,TYPEDSR       SET RECORD TYPE
         LA    R1,CDSVAR             MOVE TO VARIABLE SECTION
         USING CDSRECVR,R1
         TM    FLAGS,NONSELC         IS FILE NON-SELECTABLE?
         BO    PUTDSRC2
         TM    FLAGS,PDSFND          CHECK PDS FLAGS
         BO    PUTDSRC2              IF UNFAMILIAR PDS, BRANCH
         TM    FLAGS,LPDSFND
         BZ    PUTDSRC1
         MVI   CDSSTYPE,STYPLOAD     SET SECTION TYPE
         B     PUTDSRC3
PUTDSRC1 MVI   CDSSTYPE,STYPSRCE     SET SECTION TYPE
         B     PUTDSRC3
PUTDSRC2 MVI   CDSSTYPE,STYPNSLC     SET SECTION TYPE
PUTDSRC3 MVC   CDSFMT1D(140),DS1DSNAM MOVE IN FORMAT-1 DSCB
         MVC   CDSVOLSR,VOLUME       INSURE CORRECT VOLUME SERIAL
         DROP  R1
         NI    FLAGS,X'FF'-NONSELC-PDSFND
         B     READDSCB
ENDOFRDS DS    0H
         TM    FLAGS,MESSY1+MESSY2
         BZ    WVOLEXIT
         TM    FLAGS,MESSY1
         BZ    TESTMSG2
         MVC   WSOUTBFR+1(40),MSG1
         B     PUTMSG
         SPACE ,
TESTMSG2 DS    0H
         TM    FLAGS,MESSY2
         BZ    TESTMSG3
         MVC   WSOUTBFR+1(45),MSG2
         B     PUTMSG
TESTMSG3 DS    0H
         SPACE ,
PUTMSG   DS    0H
         PUT   SYSPTDCB,WSOUTBFR
         TITLE  'WVOLCOLL -- TERMINATION'
WVOLEXIT DS    0H
         LA    R1,DCBLST             LOAD DCB LIST PTR
         CLOSE MF=(E,(1))            CLOSE ALL FILES
         L     R1,CTLAREA            FREE STORAGE FOR CARD AREA
         FREEMAIN RU,LV=512*80,A=(1)
         SPACE ,
         SR    R15,R15
WVOLRETN L     R13,SAVEAREA+4
         RETURN (14,12),RC=(15)
BADDCB   LA    R15,16
         B     WVOLRETN
         TITLE  'WVOLCOLL -- CONSTANTS'
***********************************
*                                 *
*         CONSTANTS               *
*                                 *
***********************************
ZEROS    DC    10D'0'
         SPACE ,
FLAGS    DC    X'0'
INCLMODE EQU   X'80'
EXCLMODE EQU   X'40'
WVOLCVAF EQU   X'20'
PDSFND   EQU   X'18'
LPDSFND  EQU   X'10'
SPDSFND  EQU   X'08'
NONSELC  EQU   X'04'
MESSY1   EQU   X'02'
MESSY2   EQU   X'01'
         SPACE ,
VOLUME   DS    CL6
         SPACE
SAVEAREA DC    18F'0'
CTLAREA  DS    A
CTLCOUNT DS    F
         SPACE ,
JFCBAREA DS    0F,176C
JFCBARE2 DS    0F,176C
JFCBARE3 DS    0F,176C
JFCBARE4 DS    0F,176C
         TITLE  'WVOLCOLL -- DCBS'
***********************************
*                                 *
*           DCBS                  *
*                                 *
***********************************
         SPACE ,
VTOCDCB  DCB   EXLST=EXITLIST,                                         C
               DSORG=PS,                                               C
               MACRF=(E),                                              C
               DDNAME=TGTVOL
         SPACE ,
EXITLIST DS    0F
         DC    X'87'
         DC    AL3(JFCBAREA)
         SPACE ,
SYSINDCB DCB   DDNAME=SYSIN,         CONTROL STATEMENTS                C
               DSORG=PS,                                               C
               EODAD=INPEODAD,                                         C
               MACRF=(GL)
         SPACE ,
SYSPTDCB DCB   DDNAME=SYSPRINT,      SYSPRINT                          C
               DSORG=PS,               FILE                            C
               LRECL=133,                FOR                           C
               RECFM=FBA,                  THE                         C
               BLKSIZE=1330,                 HUMANS                    C
               MACRF=(PM)
         SPACE ,
ODSRDCB  DCB   DSORG=PS,                                               C
               RECFM=VB,                                               C
               DDNAME=OUTDSR,                                          C
               MACRF=(PL),                                             C
               LRECL=264,                                              C
               BLKSIZE=4094
         SPACE ,
         TITLE  'WVOLCOLL -- CVAF BUFFER AND RDJFCB LIST'
BUFLIST  ICVAFBFL DSECT=NO
         EJECT
JFCBLIST RDJFCB (VTOCDCB),MF=L
CVPL     CVAFSEQ ACCESS=GT,BUFLIST=BUFLIST,MF=L
         ORG   CVPL
CVPLMAP  ICVAFPL DSECT=NO
         SPACE ,
         DS    0F
DCBLST   OPEN  (SYSINDCB,,SYSPTDCB,(OUTPUT),ODSRDCB,(OUTPUT)),MF=L
         SPACE ,
MSG1     DC    C'*** WARNING - MORE THAN 512 CONTROL STMTS'
MSG2     DC    C'*** WARNING - NO DATASET NAME ON CONTROL STMT'
         SPACE ,
*
* THIS IS THE SYSPRINT BUFFER DEFINITION
*
WSOUTBFR DC    CL133' '
WVOLDSBA DS    CL140
         LTORG
         END
//LKED.SYSLMOD  DD  DISP=SHR,DSN=WSBG.WVOL.LOADLIB(WVOLCOLL)
